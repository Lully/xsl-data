<?xml version="1.0" encoding="UTF-8"?>
<!--Feuille de style traitant le fichier pré-XML pour le transformer en notices Unimarc Sudoc avec données d'exemplaires, 
et actualisation des PPN-->
<!--
Le script convertit une liste de PPN en notices unimarc, et peut aussi y accoler des données d'exemplaires 
dans une zone à définir.
Le fichier XSL qui appelle cette feuille doit contenir la balise racine <collection/>, 
et doit assurer le regroupement des exemplaires sous le même PPN, s'il y a plusieurs exemplaires par PPN
-->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0"
        xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
         xmlns:bibo="http://purl.org/ontology/bibo/"
         xmlns:dc="http://purl.org/dc/elements/1.1/"
         xmlns:dcterms="http://purl.org/dc/terms/"
         xmlns:rdafrbr1="http://rdvocab.info/RDARelationshipsWEMI/"
         xmlns:marcrel="http://www.loc.gov/loc.terms/relators/"
         xmlns:foaf="http://xmlns.com/foaf/0.1/"
         xmlns:gr="http://purl.org/goodrelations/v1#"
         xmlns:owl="http://www.w3.org/2002/07/owl#"
         xmlns:frbr="http://purl.org/vocab/frbr/core#"
         xmlns:isbd="http://iflastandards.info/ns/isbd/elements/"
         xmlns:skos="http://www.w3.org/2004/02/skos/core#"
         xmlns:rdafrbr2="http://RDVocab.info/uri/schema/FRBRentitiesRDA/"
         xmlns:rdaelements="http://rdvocab.info/Elements/">

<xsl:param name="api_merged">http://www.sudoc.fr/services/merged/</xsl:param>

  <xsl:template name="ppn2Unimarc">
  <!--Le paramètre PPN permet de récupérer la notice unimarc-->
  <xsl:param name="ppn"/>
  <!--Le paramètre "autres infos" permet de stocker des champs "locaux" qu'on veut conserver dans la notice Unimarc final (ancien n° de notice, etc.). 
  Ce sont des champs complets qui doivent être stockés dans cette variable. Par exemple :
  <datafield tag="038" ind1=" " ind2=" ">
    <subfield code="a">NUM0000002</subfield>
  </varfield>-->
  <xsl:param name="autres_infos"/>
  <xsl:param name="exemplaires"/>
    
  <xsl:variable name="final_ppn">
        <xsl:choose>
          <xsl:when test="document(concat($api_merged, $ppn))//result"><xsl:value-of select="document(concat($api_merged, $ppn))//result/ppn"/></xsl:when>
          <xsl:otherwise><xsl:value-of select="$ppn"/></xsl:otherwise>
        </xsl:choose>
  </xsl:variable>

    <xsl:variable name="sudoc_record">
      <xsl:copy-of select="document(concat('http://www.sudoc.fr/', $final_ppn, '.rdf'))//rdf:RDF"/>
    </xsl:variable>

  <record>
      <leader>-----nam--22--------450-</leader>
      <controlfield tag="001">PPN<xsl:value-of select="$final_ppn"/></controlfield>

      <datafield tag="100" ind1=" " ind2=" ">
          <subfield code="a">--------d--------u--y0frey0103----ba</subfield>
      </datafield>
      
<!---->
                    <xsl:variable name="isbn_control"><xsl:value-of select="$sudoc_record//bibo:isbn10"/><xsl:value-of select="$sudoc_record//bibo:isbn13"/></xsl:variable>

                    <xsl:if test="$isbn_control != '' ">
                      <datafield tag="010" ind1=" " ind2=" ">
                      <xsl:if test="$sudoc_record//bibo:isbn10">
                      <xsl:for-each select="$sudoc_record//bibo:isbn10">
                        <subfield code="a">
                          <xsl:value-of select="."/>
                        </subfield>
                        </xsl:for-each>
                        </xsl:if>
                      <xsl:if test="$sudoc_record//bibo:isbn13">
                          <xsl:for-each select="$sudoc_record//bibo:isbn13">
                        <subfield code="A">
                          <xsl:value-of select="."/>
                        </subfield>
                        </xsl:for-each>
                        </xsl:if>
                      </datafield>
                    </xsl:if>
                    <!--datafield tag="038" ind1=" " ind2=" ">
                        <subfield code="a">PASS<xsl:value-of select="N_notice"/></subfield>
                    </datafield-->
                    
                      <datafield tag="101" ind1="0" ind2=" ">
                      <xsl:for-each select="$sudoc_record//bibo:Book/dcterms:language">
                        <subfield code="a">
                        <xsl:value-of select="substring-after(@rdf:resource, 'http://lexvo.org/id/iso639-3/')"/></subfield>
                        </xsl:for-each>
                      </datafield>
                   
                    <datafield tag="200" ind1="1" ind2=" ">
                    <xsl:variable name="title">
                          <xsl:choose>
                          <xsl:when test="contains($sudoc_record//bibo:Book/dc:title, '[')">
                          <xsl:value-of select="normalize-space(substring-before($sudoc_record//bibo:Book/dc:title, '['))"/>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:choose>
                              <xsl:when test="contains($sudoc_record//bibo:Book/dc:title, '/')">
                                  <xsl:value-of select="normalize-space(substring-before($sudoc_record//bibo:Book/dc:title, '  /'))"/>
                          </xsl:when>
                          <xsl:otherwise>
                               <xsl:value-of select="normalize-space($sudoc_record//bibo:Book/dc:title)"/>
                          </xsl:otherwise>
                            </xsl:choose>
                          </xsl:otherwise>
                          </xsl:choose>
                      </xsl:variable>
                      <subfield code="a">
                          <xsl:choose>
                            <xsl:when test="string-length($title) &gt; 0"><xsl:value-of select="$title"/></xsl:when>
                            <xsl:otherwise><xsl:value-of select="$sudoc_record//bibo:Book/dc:title"/></xsl:otherwise>
                          </xsl:choose>
                      </subfield>
                      <xsl:if test="contains($sudoc_record//bibo:Book/dc:title, '[')">
                      <subfield code="b">
                        <xsl:value-of select="substring-before(substring-after($sudoc_record//bibo:Book/dc:title, '['),']')"/>
                      </subfield>
                      </xsl:if>
                      <xsl:if test="contains(substring-before(substring-after($sudoc_record//bibo:Book/dc:title, ']'), '/'), ':')">
                        <subfield code="e">
                          <xsl:value-of select="normalize-space(substring-before(substring-after($sudoc_record//bibo:Book/dc:title, ': '), '/'))"/>
                        </subfield>
                      </xsl:if>
                      <xsl:if test="contains($sudoc_record//bibo:Book/dc:title, '/')">
                      <subfield code="f">
                        <xsl:value-of select="substring-after($sudoc_record//bibo:Book/dc:title, '/')"/>
                      </subfield>
                      </xsl:if>
                    </datafield>

                      <datafield tag="210" ind1="1" ind2=" ">
                        <subfield code="a">
                          <xsl:value-of select="substring-before($sudoc_record//dc:publisher, ' :')"/>
                        </subfield>
                        <subfield code="c">
                            <xsl:value-of select="substring-before(substring-after($sudoc_record//dc:publisher, ' : '), ' , ')"/>
                          </subfield>
                        <subfield code="d">
                          <xsl:value-of select="substring-after($sudoc_record//dc:publisher, ' , ')"/>
                        </subfield>
                      </datafield>

                    <xsl:if test="$sudoc_record//dc:format != ''">
                      <datafield tag="215" ind1=" " ind2=" ">
                        <subfield code="a">
                          <xsl:value-of select="$sudoc_record//dc:format"/>
                        </subfield>
                      </datafield>
                    </xsl:if>
                    <xsl:for-each select="$sudoc_record//dc:subject">
                      <datafield tag="606" ind1=" " ind2=" ">
                        <subfield code="a"><xsl:value-of select="."/></subfield>
                      </datafield>
                    </xsl:for-each>
                    <xsl:for-each select="$sudoc_record//marcrel:aut">
                      <datafield tag="700" ind1=" " ind2="1">
                        <subfield code="3"><xsl:value-of select="substring-after(substring-before(foaf:Person/@rdf:about, '/id'),'http://www.idref.fr/')"/></subfield>
                        <subfield code="a"><xsl:value-of select="substring-before(foaf:Person/foaf:name, ',')"/></subfield>
                        <subfield code="b">
                            <xsl:choose>
                              <xsl:when test="contains(substring-after(foaf:Person/foaf:name, ', '), ' (')">
                                 <xsl:value-of select="substring-before(substring-after(foaf:Person/foaf:name, ', '), ' (')"/></xsl:when>
                                 <xsl:otherwise><xsl:value-of select="substring-after(foaf:Person/foaf:name, ', ')"/></xsl:otherwise>
                            </xsl:choose>
                        </subfield>
                        <xsl:if test="contains(substring-after(foaf:Person/foaf:name, '('), ')')">
                        <subfield code="f"><xsl:value-of select="substring-before(substring-after(foaf:Person/foaf:name, '('), ')')"/></subfield></xsl:if>
                      </datafield>

                    </xsl:for-each>
              
              <!--Ajout des infos locales-->      
              <xsl:copy-of select="$autres_infos"/>
              
              <!--Regroupement des exemplaires-->
                <xsl:copy-of select="$exemplaires"/>
            </record>
</xsl:template>
  
</xsl:stylesheet>
